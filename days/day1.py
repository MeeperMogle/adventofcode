from functions.day1 import solve_captcha_day1_1, solve_captcha_shift

input1_raw =\
    '8239366453455812726956773185134594918346411298443937426725535444391263143998467732348455355933553489314994961848' \
    '3958211881768917194863586442785221532542143371745897577136952213876624822596324216865897532635478541525297429431' \
    '7138511141826226866364555761117178764543435899886711426319675443679829181257496966219435831621565519667989898725' \
    '8366396266816458217148614431418934276723847167327658848447724333747981859557413111163658996598336342379388781813' \
    '6731721863553966735736429575474482959584296277352458422542796946746761164159183487676982971924813661314735129853' \
    '4885563144114336211961674392912181735773851634298227454157885241769156811787611897349965331474217223461176896643' \
    '2429753972278596965544929969372354232725493483495285594322145215516569711368599722328541262623493812544245973488' \
    '7444773654572226195787127593575676418437899416742798381171667547625785855646475567747872514658874714785737529367' \
    '5711575747132471727933773512571368467386151966568598964631331428869762151853634362356935751298121849281442128796' \
    '5176634823912261742563955151663615144426249441812559521245248152688641319691514338887212135952679273257595621327' \
    '3258625243845656955699268589651756525778746467371822181778392969162687644642313433174932732236757143253285723521' \
    '4364221471769481667118117729326429556357572421333798517168997863151927281418238491791975399357393494751913155219' \
    '8623999596469934289218787981192156755488478454779948367449299189541597228271947215641215323154596114331573849945' \
    '4333277379686216524318337846473154678749817484478178113957198427223587286688627587994492132995973631529673398131' \
    '3643956576956851762149275521949177991988236529475373595217665112434727744235789852852765675189342753695377219374' \
    '7915485547866714737331249519467795318474797553633632884482816221837365454943723447851123127496941674839967383843' \
    '5129389914913685772854597744276348979969349231954977332862691887471838769787823574415449167792231751895268743965' \
    '5962477734559232755624943644966227973617788182213621899579391324399386146423427262874437992579573858589183571854' \
    '5778614597585343485335539251679471393518195117988299773712158566372152218389246126447854989362638494895198965488' \
    '11254628976642391428413984281758771868781714266261781359762798'

input1 = []

for char in input1_raw:
    input1.append(int(char))

input2_raw = \
    '8239366453455812726956773185134594918346411298443937426725535444391263143998467732348455355933553489314994961848' \
    '3958211881768917194863586442785221532542143371745897577136952213876624822596324216865897532635478541525297429431' \
    '7138511141826226866364555761117178764543435899886711426319675443679829181257496966219435831621565519667989898725' \
    '8366396266816458217148614431418934276723847167327658848447724333747981859557413111163658996598336342379388781813' \
    '6731721863553966735736429575474482959584296277352458422542796946746761164159183487676982971924813661314735129853' \
    '4885563144114336211961674392912181735773851634298227454157885241769156811787611897349965331474217223461176896643' \
    '2429753972278596965544929969372354232725493483495285594322145215516569711368599722328541262623493812544245973488' \
    '7444773654572226195787127593575676418437899416742798381171667547625785855646475567747872514658874714785737529367' \
    '5711575747132471727933773512571368467386151966568598964631331428869762151853634362356935751298121849281442128796' \
    '5176634823912261742563955151663615144426249441812559521245248152688641319691514338887212135952679273257595621327' \
    '3258625243845656955699268589651756525778746467371822181778392969162687644642313433174932732236757143253285723521' \
    '4364221471769481667118117729326429556357572421333798517168997863151927281418238491791975399357393494751913155219' \
    '8623999596469934289218787981192156755488478454779948367449299189541597228271947215641215323154596114331573849945' \
    '4333277379686216524318337846473154678749817484478178113957198427223587286688627587994492132995973631529673398131' \
    '3643956576956851762149275521949177991988236529475373595217665112434727744235789852852765675189342753695377219374' \
    '7915485547866714737331249519467795318474797553633632884482816221837365454943723447851123127496941674839967383843' \
    '5129389914913685772854597744276348979969349231954977332862691887471838769787823574415449167792231751895268743965' \
    '5962477734559232755624943644966227973617788182213621899579391324399386146423427262874437992579573858589183571854' \
    '5778614597585343485335539251679471393518195117988299773712158566372152218389246126447854989362638494895198965488' \
    '11254628976642391428413984281758771868781714266261781359762798'

input2 = []

for char in input1_raw:
    input2.append(int(char))

print('Part one:', solve_captcha_day1_1(input1))
print('Part one, enhanced:', solve_captcha_shift(input1))

if solve_captcha_day1_1(input1) == solve_captcha_shift(input1):
    print('Part two:', solve_captcha_shift(input2, int(len(input2) / 2)))
else:
    print("Second function doesn't give expected result on long input...")
